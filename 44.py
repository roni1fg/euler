# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?


def find_pentagonal_numbers(num):
    return [int(i*(3*i - 1)/2) for i in range(1, num)]

def find_pent_pair(pent_list):
    min_diff = pent_list[-1]
    for i, num in enumerate(pent_list):
        if i % 500 == 0:
            print('i = {}'.format(i))
        for j in range(i, len(pent_list)):
            if num + pent_list[j] in pent_list[j+1:j*2]:
                diff = pent_list[j] - num
                if diff in pent_list[:j] and diff < min_diff:
                    print(num, pent_list[j])
                    print('diff: {}'.format(diff))
                    min_diff = diff
    return min_diff



def main():
    threshold = 5000
    pent_list = find_pentagonal_numbers(threshold)
    print('min diff is: {}'.format(find_pent_pair(pent_list)))
    # print(pent_list[:10])
    # print(pent_list[-10:])


if __name__ == '__main__':
    main()
# 1560090 7042750
# diff: 5482660